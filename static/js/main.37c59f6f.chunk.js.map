{"version":3,"sources":["page/base.js","page/xrSpatialControls.js","page/xrBase.js","App.js","reportWebVitals.js","index.js"],"names":["cube","scene","camera","renderer","cameraControls","player","destination","box","control","controlledObj","multipliedScalar","teleport","CameraControls","install","THREE","clock","playerPos","destinationPos","result","tmp","tmpQuaternion","TranslateHelperGeometry","geometry","setAttribute","matHelper","depthTest","depthWrite","transparent","side","fog","toneMapped","deltaLine","deltaLine2","Main","containerRef","useRef","canvasRef","Animate","requestAnimationFrame","rotation","x","y","delta","getDelta","update","dragging","visible","getWorldPosition","subVectors","multiplyScalar","position","copy","add","getWorldQuaternion","set","sub","scale","render","Test","useEffect","background","window","innerWidth","innerHeight","antialias","canvas","current","setSize","material","z","domElement","TransformControls","addEventListener","event","enabled","value","attach","geometry2","material2","wireframe","Init","gui","dat","open","ref","controller1","controller2","controllerGrip1","controllerGrip2","room","vrButtonConRef","onWindowResize","aspect","updateProjectionMatrix","handleController","controller","userData","isSelecting","color","translate","light","onSelectStart","this","console","log","onSelectEnd","onMove","onLeftSqueezeStart","onRightSqueezeStart","normalize","xr","setPixelRatio","devicePixelRatio","setFramebufferScaleFactor","appendChild","VRButton","createButton","getController","controllerModelFactory","XRControllerModelFactory","getControllerGrip","createControllerModel","init","setAnimationLoop","instancedMesh","count","amount","objects","object","quaternion","velocity","random","Math","applyQuaternion","noise","length","i","height","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","rotateZ","PI","rotateX","texture","load","map","frustumCulled","push","document","body","labs","Object","entries","Pages","App","style","className","k","v","default","Tmp","exact","path","marginTop","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.37c59f6f.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls'\r\n\r\n\r\n\r\nimport CameraControls from \"camera-controls\";\r\n\r\nimport * as dat from 'dat.gui';\r\n\r\nconst controlledObj = {\r\n    multipliedScalar: 3,\r\n    teleport: () => { }\r\n\r\n}\r\n\r\n\r\nCameraControls.install({ THREE: THREE });\r\n\r\nlet cube, scene, camera, renderer, cameraControls, player, destination, box;\r\nlet control\r\nconst clock = new THREE.Clock();\r\n\r\nlet playerPos = new THREE.Vector3();\r\nlet destinationPos = new THREE.Vector3();\r\n// let cubePos = new THREE.Vector3();\r\n\r\nlet result = new THREE.Vector3();\r\n\r\nlet tmp = new THREE.Vector3();\r\nlet tmpQuaternion = new THREE.Quaternion();\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TranslateHelperGeometry() {\r\n\r\n    const geometry = new THREE.BufferGeometry();\r\n\r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\r\n\r\n    return geometry;\r\n\r\n}\r\n\r\n\r\nconst matHelper = new THREE.MeshBasicMaterial({\r\n    depthTest: false,\r\n    depthWrite: false,\r\n    transparent: true,\r\n    side: THREE.DoubleSide,\r\n    fog: false,\r\n    toneMapped: false\r\n});\r\n\r\n\r\nlet deltaLine = new THREE.Line(TranslateHelperGeometry(), matHelper);\r\n\r\nlet deltaLine2 = new THREE.Line(TranslateHelperGeometry(), matHelper)\r\n\r\n\r\n// handle.position.copy( this.worldPositionStart );\r\n// \t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\r\n// \t\t\t\t\t_tempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\r\n// \t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\r\n// \t\t\t\t\thandle.scale.copy( _tempVector );\r\n// \t\t\t\t\thandle.visible = this.dragging;\r\n\r\nexport default function Main() {\r\n    const containerRef = useRef();\r\n    const canvasRef = useRef();\r\n    useEffect(() => {\r\n        Init();\r\n        Animate();\r\n\r\n        controlledObj.teleport = Test\r\n\r\n\r\n        const gui = new dat.GUI();\r\n        gui.open();\r\n\r\n        gui.add(controlledObj, \"multipliedScalar\")\r\n        gui.add(controlledObj, \"teleport\")\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function Init() {\r\n        scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(\"skyblue\")\r\n        camera = new THREE.PerspectiveCamera(\r\n            75,\r\n            window.innerWidth / window.innerHeight,\r\n            0.1,\r\n            1000\r\n        );\r\n        renderer = new THREE.WebGLRenderer({ antialias: true, canvas: canvasRef.current });\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        // containerRef.current.appendChild(renderer.domElement);\r\n\r\n        var geometry = new THREE.BoxGeometry(1, 1, 1);\r\n        var material = new THREE.MeshNormalMaterial();\r\n        cube = new THREE.Mesh(geometry, material);\r\n        scene.add(cube);\r\n        camera.position.z = 5;\r\n\r\n        cameraControls = new CameraControls(camera, renderer.domElement);\r\n\r\n\r\n        player = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 100, 100), material);\r\n        player.position.set(0, 1, 0);\r\n        scene.add(player);\r\n\r\n        // let player =new THREE.Mesh(new THREE.SphereBufferGeometry(1,100,100), material);\r\n\r\n        // scene.add(player);\r\n\r\n\r\n        destination = new THREE.Mesh(new THREE.SphereBufferGeometry(1, 100, 100), material);\r\n        destination.position.set(3, 3, 3);\r\n        scene.add(destination);\r\n\r\n        scene.add(new THREE.AxesHelper(10))\r\n\r\n        control = new TransformControls(camera, renderer.domElement);\r\n\r\n        control.addEventListener('dragging-changed', function (event) {\r\n\r\n            cameraControls.enabled = !event.value;\r\n\r\n            deltaLine.visible = !deltaLine.visible;\r\n            deltaLine2.visible = !deltaLine2.visible;\r\n\r\n        });\r\n\r\n        control.attach(destination);\r\n        scene.add(control);\r\n        scene.add(camera)\r\n\r\n        var geometry2 = new THREE.BoxGeometry(1, 1, 1);\r\n        var material2 = new THREE.MeshNormalMaterial({ wireframe: true });\r\n        box = new THREE.Mesh(geometry2, material2);\r\n        scene.add(box);\r\n\r\n        scene.add(deltaLine)\r\n        scene.add(deltaLine2)\r\n    }\r\n\r\n    function Animate() {\r\n        requestAnimationFrame(Animate);\r\n        cube.rotation.x += 0.01;\r\n        cube.rotation.y += 0.01;\r\n\r\n        const delta = clock.getDelta();\r\n        // const hasControlsUpdated = cameraControls.update(delta);\r\n        cameraControls.update(delta);\r\n\r\n\r\n\r\n        if (control.dragging) {\r\n\r\n            deltaLine.visible = true;\r\n            deltaLine2.visible = true\r\n            player.getWorldPosition(playerPos)\r\n            destination.getWorldPosition(destinationPos)\r\n\r\n            tmp.subVectors(destinationPos, playerPos)\r\n\r\n            tmp.multiplyScalar(controlledObj.multipliedScalar);\r\n            box.position.copy(tmp.add(cube.position))\r\n\r\n            player.getWorldQuaternion(tmpQuaternion);\r\n\r\n            deltaLine.position.copy(playerPos);\r\n            // tmp.set(1e-10, 1e-10, 1e-10).add(playerPos).sub(destinationPos).multiplyScalar(- 1);\r\n            // tmp.set(1e-10, 1e-10, 1e-10).add(playerPos).sub(destinationPos).multiplyScalar(- 1);\r\n            tmp.set(1e-10, 1e-10, 1e-10).add(destinationPos).sub(playerPos);\r\n            ///???? 한번 물어볼까 ????\r\n            deltaLine.scale.copy(tmp);\r\n\r\n            deltaLine2.position.copy(cube.position);\r\n            tmp.set(1e-10, 1e-10, 1e-10).add(cube.position).sub(box.position).multiplyScalar(- 1);\r\n            deltaLine2.scale.copy(tmp);\r\n        }\r\n\r\n\r\n        renderer.render(scene, camera);\r\n    }\r\n\r\n    function Test() {\r\n        result = tmp.subVectors(destinationPos, playerPos)\r\n        cube.position.add(result.multiplyScalar(controlledObj.multipliedScalar));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div ref={containerRef}>\r\n            <canvas ref={canvasRef}></canvas>\r\n        </div>\r\n    );\r\n}\r\n","import * as THREE from \"three\";\r\nimport React, {  useEffect, useRef } from \"react\";\r\n\r\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton.js';\r\nimport { XRControllerModelFactory } from 'three/examples/jsm/webxr/XRControllerModelFactory.js';\r\n\r\nvar camera, scene, renderer;\r\nvar controller1, controller2;\r\nlet controllerGrip1, controllerGrip2;\r\n\r\nlet player, destination;\r\n\r\nvar room;\r\n\r\nlet playerPos = new THREE.Vector3();\r\nlet destinationPos = new THREE.Vector3();\r\n// let cubePos = new THREE.Vector3();\r\n\r\nlet result = new THREE.Vector3();\r\n\r\nlet tmp = new THREE.Vector3();\r\nlet tmpQuaternion = new THREE.Quaternion();\r\n\r\n\r\nlet cube, box\r\n\r\nconst controlledObj = {\r\n    multipliedScalar: 3,\r\n    teleport: () => { }\r\n\r\n}\r\n\r\n// var count = 0, amount = 1000;\r\n// var instancedMesh, objects = [];\r\n\r\n// var clock = new THREE.Clock();\r\n// let  scene, camera, renderer;\r\n// const clock = new THREE.Clock();\r\n\r\n\r\n\r\nfunction TranslateHelperGeometry() {\r\n\r\n    const geometry = new THREE.BufferGeometry();\r\n\r\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\r\n\r\n    return geometry;\r\n\r\n}\r\n\r\n\r\nconst matHelper = new THREE.MeshBasicMaterial({\r\n    depthTest: false,\r\n    depthWrite: false,\r\n    transparent: true,\r\n    side: THREE.DoubleSide,\r\n    fog: false,\r\n    toneMapped: false\r\n});\r\n\r\n\r\nlet deltaLine = new THREE.Line(TranslateHelperGeometry(), matHelper);\r\n\r\nlet deltaLine2 = new THREE.Line(TranslateHelperGeometry(), matHelper)\r\n\r\n\r\nexport default function Main() {\r\n    const containerRef = useRef();\r\n    const canvasRef = useRef();\r\n    const vrButtonConRef = useRef();\r\n\r\n    useEffect(() => {\r\n        init();\r\n        animate();\r\n\r\n            //eslint-disable-next-line\r\n    }, []);\r\n\r\n    function init() {\r\n        scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(0x404040);\r\n        scene.fog = new THREE.Fog(scene.background, 10, 15);\r\n\r\n        camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 20);\r\n        camera.position.set(0, 1.6, 0);\r\n\r\n        var color = new THREE.Color(0x505050);\r\n        room = new THREE.GridHelper(20, 40, color, color);\r\n        room.geometry.translate(0, -0.01, 0); // fix z-fighting\r\n        scene.add(room);\r\n\r\n        scene.add(new THREE.HemisphereLight(0x606060, 0x404040));\r\n\r\n        const light = new THREE.DirectionalLight(0xffffff);\r\n        light.position.set(1, 1, 1).normalize();\r\n        scene.add(light);\r\n\r\n        // renderer = new THREE.WebGLRenderer({ antialias: true });\r\n        renderer = new THREE.WebGLRenderer({ antialias: true, canvas: canvasRef.current });\r\n        renderer.xr.enabled = true;\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.xr.setFramebufferScaleFactor(2.0);\r\n        vrButtonConRef.current.appendChild(VRButton.createButton(renderer));\r\n\r\n        // controllers\r\n        function onSelectStart() {\r\n\r\n            this.userData.isSelecting = true;\r\n            console.log(this)\r\n\r\n\r\n\r\n        }\r\n\r\n        function onSelectEnd() {\r\n\r\n            this.userData.isSelecting = false;\r\n            console.log(this)\r\n\r\n            Test();\r\n\r\n            // Test 함수 의 호출을 여기서 ... \r\n        }\r\n\r\n        function onMove() {\r\n            console.log('moved')\r\n        }\r\n\r\n        function onLeftSqueezeStart(){\r\n            controlledObj.multipliedScalar++\r\n            console.log(controlledObj.multipliedScalar)\r\n        }\r\n\r\n        function onRightSqueezeStart(){\r\n            controlledObj.multipliedScalar--\r\n            console.log(controlledObj.multipliedScalar)\r\n        }\r\n\r\n        controller1 = renderer.xr.getController(0);\r\n        controller1.addEventListener('selectstart', onSelectStart);\r\n        controller1.addEventListener('selectend', onSelectEnd);\r\n        controller1.addEventListener('select', onMove);\r\n\r\n        controller1.addEventListener('squeezestart', onLeftSqueezeStart);\r\n        // controller1.addEventListener('squeezeEnd', onMove);\r\n        // controller1.addEventListener('squeeze', onMove);\r\n        scene.add(controller1);\r\n\r\n        controller2 = renderer.xr.getController(1);\r\n        controller2.addEventListener('selectstart', onSelectStart);\r\n        controller2.addEventListener('selectend', onSelectEnd);\r\n\r\n        controller2.addEventListener('squeezestart', onRightSqueezeStart);\r\n        // controller2.addEventListener('squeezeEnd', onMove);\r\n        // controller2.addEventListener('squeeze', onMove);\r\n        scene.add(controller2);\r\n\r\n\r\n\r\n        const controllerModelFactory = new XRControllerModelFactory();\r\n\r\n        controllerGrip1 = renderer.xr.getControllerGrip(0);\r\n        controllerGrip1.add(controllerModelFactory.createControllerModel(controllerGrip1));\r\n        scene.add(controllerGrip1);\r\n\r\n        controllerGrip2 = renderer.xr.getControllerGrip(1);\r\n        controllerGrip2.add(controllerModelFactory.createControllerModel(controllerGrip2));\r\n        scene.add(controllerGrip2);\r\n\r\n        //\r\n\r\n        window.addEventListener('resize', onWindowResize, false);\r\n\r\n        player = new THREE.Mesh(new THREE.SphereBufferGeometry(0.05, 100, 100), new THREE.MeshStandardMaterial({ color: \"green\" }));\r\n        player.position.set(0, 0.05, 0);\r\n        // controllerGrip1.add(player)\r\n        controller2.add(player)\r\n        // scene.add(player);\r\n\r\n        destination = new THREE.Mesh(new THREE.SphereBufferGeometry(0.05, 100, 100), new THREE.MeshStandardMaterial({ color: \"yellow\" }));\r\n        destination.position.set(0, 0.05, 0);\r\n        controller1.add(destination);\r\n\r\n\r\n\r\n        scene.add(deltaLine)\r\n        scene.add(deltaLine2)\r\n\r\n\r\n\r\n\r\n        var geometry = new THREE.BoxGeometry(1, 1, 1);\r\n        var material = new THREE.MeshNormalMaterial();\r\n        cube = new THREE.Mesh(geometry, material);\r\n        scene.add(cube);\r\n\r\n\r\n        var geometry2 = new THREE.BoxGeometry(1, 1, 1);\r\n        var material2 = new THREE.MeshNormalMaterial({ wireframe: true });\r\n        box = new THREE.Mesh(geometry2, material2);\r\n        scene.add(box);\r\n\r\n\r\n    }\r\n\r\n    function onWindowResize() {\r\n\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    }\r\n\r\n    function handleController(controller) {\r\n\r\n        if (controller.userData.isSelecting) {\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //\r\n\r\n    function animate() {\r\n\r\n        renderer.setAnimationLoop(render);\r\n\r\n    }\r\n\r\n    function render() {\r\n\r\n        handleController(controller1);\r\n        handleController(controller2);\r\n\r\n        // var delta = clock.getDelta(); \r\n\r\n        cube.rotation.x += 0.01;\r\n        cube.rotation.y += 0.01;\r\n\r\n        deltaLine.visible = true;\r\n        // deltaLine2.visible = true\r\n        player.getWorldPosition(playerPos)\r\n        destination.getWorldPosition(destinationPos)\r\n\r\n        tmp.subVectors(destinationPos, playerPos)\r\n\r\n        tmp.multiplyScalar(controlledObj.multipliedScalar);\r\n        box.position.copy(tmp.add(cube.position))\r\n\r\n        player.getWorldQuaternion(tmpQuaternion);\r\n\r\n        deltaLine.position.copy(playerPos);\r\n        tmp.set(1e-10, 1e-10, 1e-10).add(destinationPos).sub(playerPos);\r\n        deltaLine.scale.copy(tmp);\r\n\r\n        deltaLine2.position.copy(cube.position);\r\n        tmp.set(1e-10, 1e-10, 1e-10).add(cube.position).sub(box.position).multiplyScalar(- 1);\r\n        deltaLine2.scale.copy(tmp);\r\n\r\n\r\n\r\n\r\n\r\n\r\n        renderer.render(scene, camera);\r\n\r\n    }\r\n\r\n\r\n    function Test() {\r\n        result = tmp.subVectors(destinationPos, playerPos)\r\n        cube.position.add(result.multiplyScalar(controlledObj.multipliedScalar));\r\n    }\r\n\r\n\r\n    // function ThumbMove() {\r\n    //     var handedness = \"unknown\";\r\n\r\n    //     //determine if we are in an xr session\r\n    //     const session = renderer.xr.getSession();\r\n    //     let i = 0;\r\n\r\n    //     if (session) {\r\n\r\n    //         console.log(session.inputSources);\r\n    //         // 그냥 squeeze 버튼으로 조정 ????\r\n    //     }\r\n\r\n    // }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div ref={containerRef}>\r\n            <canvas ref={canvasRef} />\r\n            <div ref={vrButtonConRef}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import * as THREE from \"three\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton.js';\r\nimport { XRControllerModelFactory } from 'three/examples/jsm/webxr/XRControllerModelFactory.js';\r\n\r\nvar camera, scene, renderer;\r\nvar controller1, controller2;\r\nlet controllerGrip1, controllerGrip2;\r\n\r\nvar room;\r\n\r\nvar count = 0, amount = 1000;\r\nvar instancedMesh, objects = [];\r\n\r\n// var clock = new THREE.Clock();\r\n// let  scene, camera, renderer;\r\nconst clock = new THREE.Clock();\r\n\r\nexport default function Main() {\r\n    const containerRef = useRef();\r\n    useEffect(() => {\r\n        init();\r\n        animate();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    function init() {\r\n\r\n\r\n\r\n\r\n\r\n        scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(0x404040);\r\n        scene.fog = new THREE.Fog(scene.background, 10, 15);\r\n\r\n        camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 20);\r\n        camera.position.set(0, 1.6, 0);\r\n\r\n        var color = new THREE.Color(0x505050);\r\n        room = new THREE.GridHelper(20, 40, color, color);\r\n        room.geometry.translate(0, -0.01, 0); // fix z-fighting\r\n        scene.add(room);\r\n\r\n        scene.add(new THREE.HemisphereLight(0x606060, 0x404040));\r\n\r\n        const light = new THREE.DirectionalLight(0xffffff);\r\n        light.position.set(1, 1, 1).normalize();\r\n        scene.add(light);\r\n\r\n        // mone\r\n\r\n        var geometry = new THREE.PlaneBufferGeometry(0.2, 0.09);\r\n        geometry.rotateZ(Math.PI / 2);\r\n        geometry.rotateX(- Math.PI / 2);\r\n\r\n        var loader = new THREE.TextureLoader();\r\n        // var texture = loader.load('https://cdn.glitch.com/cf086db5-7af7-4f20-8220-93d1d99150b7%2F100_dollar_bill_vector.png?1558543607686');\r\n        var texture = loader.load('textures/bill2.png');\r\n        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.DoubleSide });\r\n\r\n        instancedMesh = new THREE.InstancedMesh(geometry, material, amount);\r\n        instancedMesh.frustumCulled = false;\r\n        room.add(instancedMesh);\r\n\r\n        for (var i = 0; i < amount; i++) {\r\n\r\n            var object = new THREE.Object3D();\r\n\r\n            object.position.x = random() * 8;\r\n            object.position.y = Math.random() * 6;\r\n            object.position.z = random() * 8;\r\n            object.rotation.y = random() * Math.PI * 2;\r\n\r\n            object.userData.velocity = new THREE.Vector3();\r\n            object.userData.velocity.x = random() * 0.01;\r\n            object.userData.velocity.y = random() * 0.01;\r\n\r\n            object.userData.velocity.z = random() * 0.01;\r\n\r\n            object.userData.noise = random() * 0.1;\r\n\r\n            objects.push(object);\r\n\r\n        }\r\n\r\n\r\n\r\n        renderer = new THREE.WebGLRenderer({ antialias: true });\r\n        renderer.xr.enabled = true;\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        containerRef.current.appendChild(renderer.domElement);\r\n\r\n        document.body.appendChild(VRButton.createButton(renderer));\r\n\r\n        // controllers\r\n\r\n        function onSelectStart() {\r\n\r\n            this.userData.isSelecting = true;\r\n\r\n        }\r\n\r\n        function onSelectEnd() {\r\n\r\n            this.userData.isSelecting = false;\r\n\r\n        }\r\n\r\n        controller1 = renderer.xr.getController(0);\r\n        controller1.addEventListener('selectstart', onSelectStart);\r\n        controller1.addEventListener('selectend', onSelectEnd);\r\n        scene.add(controller1);\r\n\r\n        controller2 = renderer.xr.getController(1);\r\n        controller2.addEventListener('selectstart', onSelectStart);\r\n        controller2.addEventListener('selectend', onSelectEnd);\r\n        scene.add(controller2);\r\n\r\n        /*\r\n                // helpers\r\n    \r\n                var geometry = new THREE.BufferGeometry();\r\n                geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0, 0, 0, - 1 ], 3 ) );\r\n                geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( [ 0.5, 0.5, 0.5, 0, 0, 0 ], 3 ) );\r\n    \r\n                var material = new THREE.LineBasicMaterial( { vertexColors: true, blending: THREE.AdditiveBlending } );\r\n    \r\n                controller1.add( new THREE.Line( geometry, material ) );\r\n                controller2.add( new THREE.Line( geometry, material ) );\r\n        */\r\n\r\n        // cannons\r\n        // controller \r\n        // var geometry = new THREE.CylinderBufferGeometry(0.1, 0.1, 0.1, 6);\r\n        // var texture = new THREE.TextureLoader().load('https://cdn.glitch.com/cf086db5-7af7-4f20-8220-93d1d99150b7%2Fdroplet_01.png?1558588643969');\r\n        // var material = new THREE.MeshMatcapMaterial({ matcap: texture, flatShading: true });\r\n\r\n        // var group = new THREE.Group();\r\n\r\n        // var mesh = new THREE.Mesh(geometry, material.clone());\r\n        // mesh.position.set(0, 0.02, - 0.06);\r\n        // mesh.rotation.set(Math.PI / 2, 0, 0);\r\n        // mesh.scale.set(0.9, 2.5, 0.6);\r\n        // group.add(mesh);\r\n\r\n        // var mesh = new THREE.Mesh(geometry, material.clone());\r\n        // mesh.position.set(0, - 0.05, 0);\r\n        // mesh.rotation.set(- Math.PI / 8, 0, 0);\r\n        // mesh.scale.set(0.25, 1.5, 0.25);\r\n        // group.add(mesh);\r\n\r\n        // controller1.add(group.clone());\r\n        // controller2.add(group.clone());\r\n\r\n        const controllerModelFactory = new XRControllerModelFactory();\r\n\r\n        controllerGrip1 = renderer.xr.getControllerGrip(0);\r\n        controllerGrip1.add(controllerModelFactory.createControllerModel(controllerGrip1));\r\n        scene.add(controllerGrip1);\r\n\r\n        controllerGrip2 = renderer.xr.getControllerGrip(1);\r\n        controllerGrip2.add(controllerModelFactory.createControllerModel(controllerGrip2));\r\n        scene.add(controllerGrip2);\r\n\r\n        //\r\n\r\n        window.addEventListener('resize', onWindowResize, false);\r\n\r\n    }\r\n\r\n    function onWindowResize() {\r\n\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    }\r\n\r\n    function handleController(controller) {\r\n\r\n        if (controller.userData.isSelecting) {\r\n\r\n            var object = objects[count++];\r\n            object.position.copy(controller.position);\r\n            object.quaternion.copy(controller.quaternion);\r\n\r\n            var velocity = object.userData.velocity;\r\n            velocity.x = random();\r\n            velocity.y = random() + 0.5;\r\n            velocity.z = Math.random() - 9;\r\n            velocity.applyQuaternion(controller.quaternion);\r\n\r\n            object.userData.noise = random() * 0.1;\r\n\r\n            if (count === objects.length) count = 0;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //\r\n\r\n    function animate() {\r\n\r\n        renderer.setAnimationLoop(render);\r\n\r\n    }\r\n\r\n    function render() {\r\n\r\n        handleController(controller1);\r\n        handleController(controller2);\r\n\r\n        //\r\n\r\n        var delta = clock.getDelta() * 0.6; // slow down simulation\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n\r\n            var object = objects[i];\r\n\r\n            var userData = object.userData;\r\n            var velocity = userData.velocity;\r\n\r\n            object.position.x += velocity.x * delta;\r\n            object.position.y += velocity.y * delta;\r\n            object.position.z += velocity.z * delta;\r\n\r\n            // flatten rotation\r\n\r\n            object.rotation.x *= 0.99;\r\n            object.rotation.z *= 0.99;\r\n\r\n            // handle floor\r\n\r\n            if (object.position.y <= 0) {\r\n\r\n                object.position.y = 0;\r\n\r\n                velocity.x *= 0.85;\r\n                velocity.y = 0;\r\n                velocity.z *= 0.85;\r\n\r\n            }\r\n\r\n            var height = object.position.y * 0.1;\r\n\r\n            if (height > 0) {\r\n\r\n                velocity.x += userData.noise * height;\r\n                velocity.y -= 9.8 * delta;\r\n                velocity.z += userData.noise * height;\r\n                object.rotation.y += userData.noise * height;\r\n\r\n            }\r\n\r\n            object.updateMatrix();\r\n\r\n            instancedMesh.setMatrixAt(i, object.matrix);\r\n\r\n        }\r\n\r\n        instancedMesh.instanceMatrix.needsUpdate = true;\r\n\r\n        renderer.render(scene, camera);\r\n\r\n    }\r\n\r\n    function random() {\r\n        return Math.random() - 0.5;\r\n    }\r\n\r\n\r\n    return <div ref={containerRef}></div>;\r\n}\r\n","import './App.css';\nimport * as Pages from './page'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\n\nconst labs = Object.entries(Pages);\n// console.log(labs);\n\nfunction App() {\n\n\n  return (\n    <Router >\n      <div style={{ height: \"100vh\" }} className=\"App\">\n        <Switch>\n          {labs.map(([k, v]) => {\n            if (v.default) {\n              const Tmp = v.default\n              return (\n                <Route\n                  exact\n                  key={k}\n                  path={`/${k}`}\n                >\n                  <Tmp />\n                </Route>\n              )\n            }\n\n            return null\n          })}\n          <Route\n            exact\n            path={`/`}\n          >\n            <h1 style={{marginTop:0}}>LAB</h1>\n            {labs.map(([k, v]) => {\n              if (v.default) {\n                return (\n                  <div key={k}>\n                    <Link to={`/${k}`}>\n                      {k}\n                    </Link>\n                  </div>\n                )\n              }\n\n              return null\n            })}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}